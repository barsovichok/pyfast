on:
  pull_request:
    branches:
      - main

jobs:
  tests:
    name: Test App
    runs-on:  ubuntu-latest
    env:
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      DATABASE_ENGINE: postgresql+psycopg2://${{secrets.POSTGRES_USER}}:${{secrets.POSTGRES_PASSWORD}}@localhost:5432/${{secrets.POSTGRES_USER}}
      DATABASE_POOL_SIZE: ${{secrets.DATABASE_POOL_SIZE}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip' # caching pip dependencies
      - run: pip install --upgrade -r requirements.txt
      - run: docker compose build
      - run: docker compose up -d
      - run: pytest tests --junit-xml=test-results.xml
        env:
          APP_URL: ${{secrets.APP_URL}}

      - run: docker compose logs app
        if: always()

      - name: Surface failing tests
        if: always()
        uses: pmeier/pytest-results-action@main
        with:
          # A list of JUnit XML files, directories containing the former, and wildcard
          # patterns to process.
          # See @actions/glob for supported patterns.
          path: test-results.xml

          # (Optional) Add a summary of the results at the top of the report
          summary: true

          # (Optional) Select which results should be included in the report.
          # Follows the same syntax as `pytest -r`
          display-options: fEX

          # (Optional) Fail the workflow if no JUnit XML was found.
          fail-on-empty: true

          # (Optional) Title of the test results section in the workflow summary
          title: Test results

